

# This file was *autogenerated* from the file kyber-bkz.sage
from sage.all_cmdline import *   # import sage library

_sage_const_2 = Integer(2); _sage_const_512 = Integer(512); _sage_const_3329 = Integer(3329); _sage_const_3 = Integer(3); _sage_const_20 = Integer(20); _sage_const_768 = Integer(768); _sage_const_1024 = Integer(1024)
load("../framework/instance_gen.sage")

verbosity = _sage_const_2 

# Kyber-512 round-3 parameters
print("============= Kyber-512")
n = _sage_const_512 
m = _sage_const_512 
q = _sage_const_3329 
D_s = build_centered_binomial_law(_sage_const_3 )
D_e = D_s

_, _, inst = initialize_from_LWE_instance(DBDD_predict_diag, n, q,
                                          m, D_e, D_s, verbosity=verbosity)

inst.integrate_q_vectors(q, report_every=_sage_const_20 )
print(" Attack Estimation via GSA + Interesect model ")
inst.estimate_attack()
print(" Attack Estimation via simulation + probabilistic model ")

inst.estimate_attack(probabilistic=True, lift_union_bound=True, silent=False)

# Kyber-768 round-3 parameters
print("============= Kyber-768")
n = _sage_const_768 
m = _sage_const_768 
q = _sage_const_3329 
D_s = build_centered_binomial_law(_sage_const_2 )
D_e = D_s

_, _, inst = initialize_from_LWE_instance(DBDD_predict_diag, n, q,
                                          m, D_e, D_s, verbosity=verbosity)

inst.integrate_q_vectors(q, report_every=_sage_const_20 )
inst.estimate_attack()
print(" Attack Estimation via simulation + probabilistic model ")

inst.estimate_attack(probabilistic=True, lift_union_bound=True, silent=False)


# Kyber-1024 round-3 parameters
print("============= Kyber-1024")
n = _sage_const_1024 
m = _sage_const_1024 
q = _sage_const_3329 
D_s = build_centered_binomial_law(_sage_const_2 )
D_e = D_s

_, _, inst = initialize_from_LWE_instance(DBDD_predict_diag, n, q,
                                          m, D_e, D_s, verbosity=verbosity)

inst.integrate_q_vectors(q, report_every=_sage_const_20 )
print(" Attack Estimation via GSA + Interesect model ")
inst.estimate_attack()
print(" Attack Estimation via simulation + probabilistic model ")

inst.estimate_attack(probabilistic=True, lift_union_bound=True, silent=False)

